version: 2

jobs:

  build:
    
    working_directory: ~/sample-java

    docker:
      - image: circleci/openjdk:8-jdk-browsers
   
#    branches:
#      ignore:
 #       - /branch1

    steps:
      - checkout

      - restore_cache:
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      
      - run: mvn clean
      
      - run: mvn install -DskipTests=true 

      - save_cache:
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      - persist_to_workspace:
          root: ~/sample-java
          paths:
            - target/java-archive-1.0-SNAPSHOT.jar

  test:
    working_directory: ~/sample-java

    docker:
      - image: circleci/openjdk:8-jdk-browsers

    steps:
      - checkout

      - restore_cache:
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      - run: mvn test

      - save_cache:
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      - persist_to_workspace:
          root: ~/sample-java
          paths:
            - target/surefire-reports

  deploy:
    working_directory: ~/sample-java

    docker:
      - image: circleci/openjdk:8-jdk-browsers

    steps:
      - checkout

      - restore_cache:
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      - attach_workspace:
          at: ~/sample-java
      - run:
          name: Install AWS CLI
          shell: /bin/sh
          command: |
            echo "Installing python-pip"
            sudo apt-get install -y python-pip

            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip

            echo "Installing awscli"
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws

            echo "check aws version"
            aws --version

      - store_artifacts:
          path: target/java-archive-1.0-SNAPSHOT.jar

      - store_test_results:
          path: target/surefire-reports

      - deploy:
          name: Deploy to AWS S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              aws s3 sync target s3://xkonsiv-circleci/java-sample/artifacts --delete
            else
              echo "Not master branch so not deploying"
            fi


      - save_cache:
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      - attach_workspace:
          at: ~/sample-java

deployment:
  production:
    branch: master
    commands:
      - eb deploy

workflows:

  version: 2

  build-test-and-deploy:

    jobs:

      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test

